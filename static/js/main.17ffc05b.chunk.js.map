{"version":3,"sources":["serviceWorker.js","constants/_variables.ts","components/atoms/Button.ts","components/atoms/Circle.ts","components/atoms/Column.ts","components/atoms/Columns.ts","components/atoms/Control.ts","components/atoms/Form.ts","components/atoms/Hero.ts","components/atoms/Icon.ts","components/atoms/Input.ts","components/atoms/Label.ts","components/atoms/Tag.ts","App.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","el","React","createElement","Button","ReactDOM","render","isPrimary","label","onClick","console","log","props","className","classes","children","Circle","backgroundColor","dimensions","style","height","borderRadius","width","Column","Columns","Control","hasIcon","iconPosition","Form","Hero","subtitle","title","titleCont","subtitleCont","container","body","Icon","size","type","icon","position","Input","placeholder","key","v4","value","Label","text","Tag","App","btn","circle","tag","input","control","form","column1","column2","Routing","basename","exact","path","component","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17ffc05b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { React, ReactDOM } from './_dependencies';\n\nexport * as serviceWorker from '../serviceWorker';\nexport const el = React.createElement;\nexport const domRender = ReactDOM.render;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IButtonProps {\n\tchildren?: Array<React.ReactNode>;\n  classes?: string;\n  isPrimary?: boolean;\n  label: string;\n  onClick?: () => void;\n};\n\nconst Button: React.FC<IButtonProps> = ({\n\tisPrimary = true,\n\tlabel = 'Click me 😏',\n\tonClick = () => { console.log('😳'); },\n\t...props\n}) => {\n\n\treturn el('button', {\n\t\tclassName: isPrimary ? 'button ' + props.classes + ' is-primary' : 'button ' + props.classes,\n\t\tonClick\n\t}, [ props.children, label ]);\n\n};\n\nexport default Button;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface ICircleProps {\n\tbackgroundColor?: string;\n\tdimensions?: string;\n};\n\nconst Circle: React.FC<ICircleProps> = ({\n\tbackgroundColor = 'has-background-primary',\n\tdimensions = '50px'\n}) => {\n\n\treturn el('div', {\n\t\tclassName: backgroundColor,\n\t\tstyle: {\n\t\t\theight: dimensions,\n\t\t\tborderRadius: '50%',\n\t\t\twidth: dimensions\n\t\t}\n\t});\n\t\n};\n\nexport default Circle;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IColumnProps {\n\tchildren: Array<React.ReactNode>;\n};\n\nconst Column: React.FC<IColumnProps> = ({ children = el('div') }) => {\n\treturn el('div', {\n\t\tclassName: 'column'\n\t}, children);\n};\n\nexport default Column;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IColumnsProps {\n\tchildren: Array<React.ReactNode>;\n}\n\nconst Columns: React.FC<IColumnsProps> = ({ children = el('div') }) => {\n\treturn el('div', {\n\t\tclassName: 'columns'\n\t}, children);\n};\n\nexport default Columns;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IControlProps {\n\thasIcon: boolean;\n\ticonPosition?: string;\n\tchildren: Array<React.ReactNode>;\n};\n\nconst Control: React.FC<IControlProps> = ({\n\thasIcon = true,\n\ticonPosition = 'right',\n\tchildren = [ el('input') ]\n}) => {\n\n\treturn el('div', {\n\t\tclassName: hasIcon ? 'control' + ' has-icon-' + iconPosition : 'control'\n\t}, children);\n\n};\n\nexport default Control;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IFormProps {\n\tchildren: Array<React.ReactNode>;\n};\n\nconst Form: React.FC<IFormProps> = ({\n\tchildren = [\n\t\tel('input')\n\t]\n}) => {\n\treturn el('div', {\n\t\tclassName: 'field'\n\t}, children);\n};\n\nexport default Form;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IHeroProps {\n\tisPrimary: boolean;\n\tsubtitle: string;\n\ttitle: string;\n};\n\nconst Hero: React.FC<IHeroProps> = ({\n\tisPrimary = true,\n\tsubtitle = 'Subtitle',\n\ttitle = 'Title'\n}) => {\n\n\tconst titleCont = el('h1', {\n\t\tclassName: 'title'\n\t}, title);\n\n\tconst subtitleCont = el('h2', {\n\t\tclassName: 'subtitle'\n\t}, subtitle);\n\n\tconst container = el('div', {\n\t\tclassName: 'container'\n\t}, [ titleCont, subtitleCont ]);\n\n\tconst body = el('div', {\n\t\tclassName: 'hero-body'\n\t}, container);\n\n\treturn el('section', {\n\t\tclassName: isPrimary ? 'hero primary' : 'hero'\n\t}, [ body ]);\n};\n\nexport default Hero;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IIconProps {\n\tclasses?: string;\n\tposition?: string;\n\tsize: string;\n\ttype: string;\n}\n\nconst Icon: React.FC<IIconProps> = ({\n\tclasses = 'icon ',\n\tsize = 'small',\n\ttype = '',\n\t...props\n}) => {\n\n\tconst icon = el('i', {\n\t\tclassName: 'fas fa-' + type\n\t});\n\n\treturn el('span', {\n\t\tclassName: props.position ? classes + 'is-' + props.position + ' is-' + size : classes + 'is-' + size\n\t}, icon);\n\n};\n\nexport default Icon;\n","import { React, v4 } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface IInputProps {\n\tclassName?: string;\n\tplaceholder: string;\n\ttype: string;\n\tvalue?: string;\n};\n\nconst Input: React.FC<IInputProps> = ({\n\tclassName = 'input',\n\tplaceholder = 'I am a placeholder',\n\ttype = 'text',\n\t...props\n}) => {\n\treturn el('input', {\n\t\tclassName,\n\t\tkey: v4(),\n\t\tplaceholder,\n\t\ttype,\n\t\tvalue: props.value\n\t});\n};\n\nexport default Input;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface ILabelProps {\n\ttext: React.ReactNode;\n};\n\nconst Label: React.FC<ILabelProps> = ({\n\ttext = 'Label'\n}) => {\n\treturn el('label', {\n\t\tclassName: 'label'\n\t}, text);\n};\n\nexport default Label;\n","import { React } from './../../constants/_dependencies';\nimport { el } from './../../constants/_variables';\n\ninterface ITagProps {\n\ttext: React.ReactNode;\n};\n\nconst Tag: React.FC<ITagProps> = ({\n\ttext = 'I am a tag'\n}) => {\n\treturn el('span', {\n\t\tclassName: 'tag is-medium'\n\t}, text);\n};\n\nexport default Tag;\n","import { React, v4 } from './constants/_dependencies';\nimport { Button, Circle, Column, Columns, Hero,\n\tControl, Form, Input, Label, Icon, Tag } from './constants/_components';\nimport { el } from './constants/_variables';\n\nconst App: React.FC = () => {\n\n\tconst btn = el(Button, {\n\t\tlabel: 'Click me 😏',\n\t\tkey: v4()\n\t});\n\n\tconst circle = el(Circle);\n\n\tconst tag = el(Tag);\n\n\tconst icon = el(Icon, {\n\t\tposition: 'left',\n\t\tsize: 'small',\n\t\ttype: 'heart',\n\t\tkey: v4()\n\t});\n\n\tconst input = el(Input, {\n\t\tplaceholder: 'placeholder',\n\t\ttype: 'search',\n\t\tkey: v4()\n\t});\n\n\tconst control = el(Control, {\n\t\thasIcon: true,\n\t\ticonPosition: 'left',\n\t\tchildren: [ input, icon ],\n\t\tkey: v4()\n\t});\n\n\tconst label = el(Label, {\n\t\ttext: 'Labeeeeel',\n\t\tkey: v4()\n\t});\n\n\tconst form = el(Form, {\n\t\tchildren: [ label, control ],\n\t\tkey: v4()\n\t});\n\n\tconst column1 = el(Column, {\n\t\tchildren: [ btn, el(Hero), form, tag ],\n\t\tkey: v4()\n\t});\n\n\tconst column2 = el(Column, {\n\t\tchildren: [ circle ],\n\t\tkey: v4()\n\t});\n\n\treturn el('div', {\n\t\tclassName: 'App container'\n\t}, [\n\t\tel(Columns, {\n\t\t\tchildren: [ column1, column2 ],\n\t\t\tkey: v4()\n\t\t})\n\t]);\n};\n\nexport default App;\n","import { React, ReactDOM, Route, Router, Switch } from './constants/_dependencies';\nimport { App } from './constants/_components';\nimport './styles/main.scss';\n\nconst Routing = () => {\n\treturn (\n\t\t<Router basename=\"/frontend-test\">\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={ App }/>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Routing/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}