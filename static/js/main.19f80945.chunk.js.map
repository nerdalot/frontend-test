{"version":3,"sources":["scripts/api.ts","scripts/helpers.ts","scripts/store/user.tsx","scripts/store/counter.tsx","assets/img/logo.svg","App.tsx","components/molecules/AddCounter.tsx","components/pages/CreateCounter.tsx","components/atoms/Button.ts","components/molecules/CreateCounterHeader.tsx","components/molecules/CreateCounterInput.tsx","components/atoms/Column.ts","components/atoms/Columns.ts","components/atoms/CounterCell.ts","components/molecules/CounterTable.tsx","components/molecules/Hero.ts","components/atoms/Icon.ts","components/molecules/Loader.tsx","components/atoms/Logo.ts","components/pages/Main.tsx","components/molecules/Searchbar.tsx","components/atoms/Subtitle.ts","components/atoms/Title.ts","components/pages/Welcome.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","window","location","hostname","a","fetch","headers","method","then","response","ok","Error","statusText","json","createClassName","defaultClasses","classes","undefined","unshift","join","React","createContext","App","useState","logged","userStatus","setUserStatus","loading","setLoading","counters","setCounters","currentScreen","setCurrentScreen","handleUserStateChange","id","value","onChange","showScreen","AddCounter","props","className","isPrimary","onClick","type","CreateCounter","console","log","Button","btnClasses","createElement","label","children","CreateCounterHeader","aria-label","CreateCounterInput","placeholder","Column","classesNames","Columns","CounterCell","header","counter","title","quantity","count","plus","less","CounterTable","map","Hero","subtitle","body","Title","Subtitle","container","Icon","size","i","Loader","Logo","src","logo","style","minWidth","maxWidth","Main","isLoading","_","find","countersList","useEffect","setTimeout","fetchCounters","length","Searchbar","Welcome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19f80945.chunk.js","sourcesContent":["const API_URL = `http://${ window.location.hostname }:3001/api/v1/counter`;\n\nexport async function fetchCounters<ICountersListState>(): Promise<ICountersListState | Array<any>> {\n  return fetch(API_URL, {\n    headers: {\n      'Content-Type': 'application/json',\n      method: 'GET'\n    }\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    });\n};\n\nexport async function postCounter<ICounterState>(title: string): Promise<ICounterState> {\n  return fetch(API_URL, {\n    headers: {\n      'Content-Type': 'application/json',\n      body: JSON.stringify(title)\n    }\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    })\n};\n","export function createClassName(defaultClasses: string, classes?: Array<string>):string {\n\tif (classes !== undefined) {\n\t\tclasses.unshift(defaultClasses);\n\t\treturn classes.join(' ');\n\t} else {\n\t\treturn defaultClasses;\n\t}\n};\n\nexport function addNewCounter() {\n\tconsole.log('add counter');\n};\n","import { React, TDispatchUserStatus, TActionUserStatus, IUserStatus, IUserStatusProps } from './../imports';\n\nexport const UserStatusContext = React.createContext<IUserStatus | undefined>(undefined);\nexport const UserStatusDispatchContext = React.createContext<TDispatchUserStatus | undefined>(undefined);\n\nexport function userStatusReducer(state: IUserStatus, action: TActionUserStatus) {\n  switch(action.type) {\n    case true: {\n      return { logged: state.logged = true };\n    }\n    case false: {\n      return { logged: state.logged = false };\n    }\n    default: {\n      throw new Error(`Unhandled actipn type: ${ action }`);\n    }\n  }\n};\n\nexport function UserStatusProvider({ children }: IUserStatusProps) {\n  const [ state, dispatch ] = React.useReducer(userStatusReducer, { logged: false });\n  return (\n    <UserStatusContext.Provider value={ state }>\n      <UserStatusDispatchContext.Provider value={ dispatch }>\n        { children }\n      </UserStatusDispatchContext.Provider>\n    </UserStatusContext.Provider>\n  );\n};\n\nexport function UseUserStatus() {\n  const context = React.useContext(UserStatusContext);\n  if (context === undefined) {\n    throw new Error('something');\n  }\n  return context;\n};\n\nexport function UserStatusDispatch() {\n\tconst context = React.useContext(UserStatusDispatchContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useUserStatusDispatch must be used within a UserStatusProvider');\n\t}\n\treturn context;\n};\n","import { React, ICounterState, TDispatchCounter, ICountersListState, TActionCounter, ICounterProps, TActionCountersList, TDispatchCountersList } from './../imports';\n\nexport const CounterContext = React.createContext<ICounterState | undefined>(undefined);\nexport const CounterDispatchContext = React.createContext<TDispatchCounter | undefined>(undefined);\n\nexport const CountersListContext = React.createContext<ICountersListState | undefined>(undefined);\nexport const CountersListDispatchContext = React.createContext<TDispatchCountersList | undefined>(undefined);\n\nexport const initialCounterState: ICounterState = {\n  title: 'Initial',\n  count: 0,\n  id: 'init'\n};\n\nexport const initialCountersListState:ICountersListState = {\n    counters: [ initialCounterState ]\n};\n\nexport function countReducer(state: ICounterState, action: TActionCounter) {\n  switch(action.type) {\n    case 'increment': {\n      return {\n        title: state.title,\n        count: state.count + 1,\n        id: state.id\n      };\n    }\n    case 'decrement': {\n      return {\n        title: state.title,\n        count: state.count - 1,\n        id: state.id\n      };\n    }\n    default: {\n      throw new Error(`Unhandled actipn type: ${ action }`);\n    }\n  }\n};\n\nexport function countersListReducer(state: ICountersListState, action: TActionCountersList) {\n  switch(action.type) {\n    case 'add': {\n      return [...state.counters, action.counter];\n    }\n    case 'delete': {\n      return state.counters.filter(counter => counter.id !== action.counter.id);\n    }\n  }\n};\n\nexport function CounterProvider({ children }: ICounterProps) {\n  const [ state, dispatch ] = React.useReducer(countReducer, initialCounterState);\n  return (\n    <CounterContext.Provider value={ state }>\n      <CounterDispatchContext.Provider value={ dispatch }>\n        { children }\n      </CounterDispatchContext.Provider>\n    </CounterContext.Provider>\n  );\n};\n\nexport function CountersListProvider({ children }: ICounterProps) {\n  // @ts-ignore\n  const [ state, dispatch ] = React.useReducer(countersListReducer, initialCountersListState);\n  return (\n    <CountersListContext.Provider value={ state }>\n      <CountersListDispatchContext.Provider value={ dispatch }>\n        { children }\n      </CountersListDispatchContext.Provider>\n    </CountersListContext.Provider>\n  );\n};\n\nexport function UseCounterState() {\n  const context = React.useContext(CounterContext);\n  if (context === undefined) {\n    throw new Error('something');\n  }\n  return context;\n};\n\nexport function CounterDispatch() {\n\tconst context = React.useContext(CounterDispatchContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useUserStatusDispatch must be used within a UserStatusProvider');\n\t}\n\treturn context;\n};\n\nexport function UseCountersListState() {\n  const context = React.useContext(CountersListContext);\n  if (context === undefined) {\n    throw new Error('UseCountersListState');\n  }\n  return context;\n};\n","export default __webpack_public_path__ + \"static/media/logo.8e81bcd7.svg\";","import { React, Welcome, Main, useState, CreateCounter } from './scripts/imports';\n\nfunction App() {\n\n\tconst [ userStatus, setUserStatus ] = useState({\n\t\tlogged: false\n\t});\n\n\tconst [ loading, setLoading ] = useState({\n\t\tloading: true\n\t});\n\n\tconst [ counters, setCounters ] = useState({\n\t\tcounters: []\n\t});\n\n\tconst [ currentScreen, setCurrentScreen ] = useState('App');\n\n\tfunction showScreen(currentScreen: string) {\n\t\tswitch(currentScreen) {\n\t\t\tcase 'Main': {\n\t\t\t\treturn <Main value={ [ loading, counters ] } onChange={ [setLoading, setCounters, setCurrentScreen ] }/>;\n\t\t\t}\n\t\t\tcase 'CreateCounter': {\n\t\t\t\treturn <CreateCounter/>;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn <Welcome value={ userStatus } onChange={ handleUserStateChange } />;\n\t\t}\n\t};\n\n\tfunction handleUserStateChange() {\n\t\tsetUserStatus({ logged: true });\n\t\tsetCurrentScreen('Main');\n\t};\n\n\treturn (\n\t\t<div id='App'>\n\t\t\t{ showScreen(currentScreen) }\n\t\t</div>\n  );\n};\n\nexport default App;\n","import { Button, Icon } from './../../scripts/imports';\n\nfunction AddCounter({ ...props }) {\n\n  return(\n    <div className='footer has-text-right has-background-white'>\n      <Button classes={ ['pl-6', 'pr-6'] } isPrimary={ true } onClick={ props.onClick }>\n        <Icon type={ 'plus' }/>\n      </Button>\n    </div>\n  );\n};\n\nexport default AddCounter;\n","import { Columns, Column, CreateCounterHeader, CreateCounterInput, Loader } from './../../scripts/imports';\n\nfunction CreateCounter({ ...props }) {\n\tconsole.log(props);\n\tconst containerClasses = ['container', 'is-fluid', 'is-vcentered', 'is-align-self-center', 'is-mobile', 'is-centered'];\n\n\treturn (\n\t\t<div id='AddCountersScreen' className='container'>\n\t\t\t<Columns classes={ containerClasses }>\n\t\t\t\t<Column>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half'] }>\n\t\t\t\t\t\t\t<CreateCounterHeader/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half'] }>\n\t\t\t\t\t\t\t<CreateCounterInput/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered'] }>\n\t\t\t\t\t\t\t<Loader/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t</Column>\n\t\t\t</Columns>\n\t\t</div>\n\t);\n};\n\nexport default CreateCounter;\n","import { React, createClassName, IButtonProps } from './../../scripts/imports';\n\nfunction Button({ ...props }: IButtonProps) {\n\tconst btnClasses = props.isPrimary ? createClassName('button is-primary', props.classes) : createClassName('button', props.classes);\n\treturn React.createElement(\n\t\t'button', {\n\t\t\tclassName: btnClasses,\n\t\t\tonClick: props.onClick\n\t\t},\n\t\tprops.label, props.children\n\t);\n};\n\nexport default Button;\n","import { Button } from './../../scripts/imports';\n\nfunction CreateCounterHeader() {\n  return(\n    <article className='message header has-background-white has-text-black'>\n      <div className='columns message-header has-background-white has-text-black is-mobile'>\n        <div className='column is-1 is-mobile'>\n          <button className='delete is-pulled-left' aria-label='delete'></button>\n        </div>\n        <div className='column is-mobile'>\n          <h1 className='is-size-5 has-text-weight-bold'>Create Counter</h1>\n        </div>\n        <div className='column is-2 is-mobile'>\n          <Button isPrimary={ true } label='Save' onClick={ () => { console.log('asdasda') } }/>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default CreateCounterHeader;\n","function CreateCounterInput() {\n  return(\n    <div className='field container'>\n      <label className='label'>Name</label>\n      <div className='control'>\n        <input className='input' type='text' placeholder='Cups of coffee'/>\n      </div>\n      <p className=\"help\">Give it a name. Creative block? See <a>examples</a>.</p>\n    </div>\n  );\n};\n\nexport default CreateCounterInput;\n","import { React, createClassName, IBaseProps } from './../../scripts/imports';\n\nfunction Column({ ...props }: IBaseProps) {\n\n\tconst classesNames = createClassName('column', props.classes);\n\n\treturn React.createElement(\n\t\t'div', { className: classesNames }, props.children\n\t);\n};\n\nexport default Column;\n","import { React, createClassName, IBaseProps } from './../../scripts/imports';\n\nfunction Columns({ ...props }: IBaseProps) {\n\n\tconst classesNames = createClassName('columns', props.classes);\n\n\treturn React.createElement(\n\t\t'div', { className: classesNames }, props.children\n\t);\n};\n\nexport default Columns;\n","import { React, ICounterCellProps } from './../../scripts/imports';\n\nfunction CounterCell({ ...props }: ICounterCellProps) {\n\n  const header = React.createElement('td', {}, props.counter.title);\n  const quantity = React.createElement('td', {}, props.counter.count);\n  const plus = React.createElement('td', {}, 'Plus');\n  const less = React.createElement('td', {}, 'Less');\n\n  return React.createElement(\n    'tr', {}, header, plus, quantity, less\n  );\n};\n\nexport default CounterCell;\n","import { createClassName, ICounterTableProps, CounterCell } from './../../scripts/imports';\n\nfunction CounterTable({\n\t...props\n}: ICounterTableProps) {\n  return (\n    <table className={ createClassName('table', props.classes) }>\n      <tbody>\n        { props.counters.map(function(counter) {\n          return <CounterCell counter={ counter } key={ counter.id }/>\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default CounterTable;\n","import { React, createClassName, IHeroProps, Title, Subtitle } from './../../scripts/imports';\n\nfunction Hero({\n\ttitle = 'Title',\n\tsubtitle = 'Subtitle',\n\t...props\n}: IHeroProps) {\n\n\tconst classesNames = createClassName('hero', props.classes);\n\tconst body = React.createElement('div', { className: 'hero-body'}, Title({ children: title}), Subtitle({ children: subtitle }));\n\tconst container = React.createElement('div', { className: 'container' }, body);\n\n\treturn React.createElement(\n\t\t'section', { className: classesNames }, container\n\t);\n};\n\nexport default Hero;\n","import { React, createClassName, IIconProps } from './../../scripts/imports';\n\nfunction Icon({ size = 'medium', ...props }: IIconProps) {\n\n\tconst classesNames = createClassName(`icon is-${ size }`, props.classes);\n\n  const i = React.createElement('i', { className: `fas fa-${ props.type }`});\n\n\treturn React.createElement(\n\t\t'span', { className: classesNames }, i\n\t);\n};\n\nexport default Icon;\n","function Loader() {\n  return (\n    <div className='columns is-centered is-vcentered is-mobile'>\n      <div className='column is-half is-mobile'>\n        <div className='circle-container'>\n          <div className=\"circle main-circle\"></div>\n          <div className='circle middle-circle'></div>\n          <div className='circle small-circle'></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { React, createClassName, IBaseProps, logo } from './../../scripts/imports';\n\nfunction Logo({ ...props }: IBaseProps) {\n\n\treturn React.createElement(\n\t\t'img', {\n\t\t\tclassName: createClassName('is-centered align-self-center', props.classes),\n\t\t\tsrc: logo,\n\t\t\tstyle: {\n\t\t\t\tminWidth: '50%',\n\t\t\t\tmaxWidth: '700px'\n\t\t\t},\n\t\t},\n\t\tprops.children\n\t);\n};\n\nexport default Logo;\n","import { Columns, Column, Searchbar, Hero, AddCounter, _, CounterTable, fetchCounters, useEffect, Loader } from './../../scripts/imports';\n\nfunction Main({ ...props }) {\n\n\tconst containerClasses = ['container', 'is-fluid', 'is-vcentered', 'is-align-self-center', 'is-mobile', 'is-centered'];\n\tlet isLoading = _.find(props.value, 'loading');\n\tconst countersList =  _.find(props.value, 'counters');\n\tconst setLoading = props.onChange[0];\n\tconst setCounters = props.onChange[1];\n\tconst setCurrentScreen = props.onChange[2];\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\t// @ts-ignore\n\t\t\tfetchCounters().then((response) => {\n\t\t\t\tsetCounters({ counters: response });\n\t\t\t\tsetLoading({ loading: false });\n\t\t\t});\n\t\t}, 2000);\n\t}, [setLoading, setCounters]);\n\n\treturn (\n\t\t<div id='Main' className='container'>\n\t\t\t<Columns classes={ containerClasses }>\n\t\t\t\t<Column>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered'] }>\n\t\t\t\t\t\t\t<Searchbar/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered', 'is-body'] }>\n\t\t\t\t\t\t\t{ isLoading ? <Loader/> : countersList.counters.length !== 0 ? <CounterTable counters={ countersList.counters }/> :  <Hero classes={ ['is-small'] } title='No counters yet' subtitle='“When I started counting my blessings, my whole life turned around.” —Willie Nelson'/> }\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered'] }>\n\t\t\t\t\t\t\t<AddCounter onClick={ () => setCurrentScreen('CreateCounter') }/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t</Column>\n\t\t\t</Columns>\n\t\t</div>\n\t);\n};\n\nexport default Main;\n","function Searchbar() {\n\treturn(\n\t\t<div className='field'>\n\t\t\t<div className='control has-icons-left is-borderless is-medium'>\n\t\t\t\t<input className='input is-medium' type='search' placeholder='Search'></input>\n\t\t\t\t<span className='icon is-medium is-left'>\n\t\t\t\t\t<i className='fas fa-search'></i>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Searchbar;\n","import { React, createClassName, IBaseProps } from './../../scripts/imports';\n\nfunction Subtitle({ ...props }: IBaseProps) {\n\n\tconst classesNames = createClassName('subtitle', props.classes);\n\n\treturn React.createElement(\n\t\t'h2', { className: classesNames }, props.children\n\t);\n};\n\nexport default Subtitle;\n","import { React, createClassName, IBaseProps } from './../../scripts/imports';\n\nfunction Title({ ...props }: IBaseProps) {\n\n\tconst classesNames = createClassName('title', props.classes);\n\n\treturn React.createElement(\n\t\t'h1', { className: classesNames }, props.children\n\t);\n};\n\nexport default Title;\n","import { Button, Columns, Column, Hero, Logo } from './../../scripts/imports';\n\nfunction Welcome({ ...props }) {\n\tconsole.log(props);\n\tconst containerClasses = ['container', 'is-fluid', 'is-vcentered', 'is-align-self-center', 'is-mobile', 'is-centered'];\n\n\treturn (\n\t\t<div id='Welcome' className='container'>\n\t\t\t<Columns classes={ containerClasses }>\n\t\t\t\t<Column>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered'] }>\n\t\t\t\t\t\t\t<Logo/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered'] }>\n\t\t\t\t\t\t\t<Hero title='Welcome to Counters' subtitle='Capture cups of lattes, frapuccinos, or anything else that can be counted.'/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns classes={ ['is-centered'] }>\n\t\t\t\t\t\t<Column classes={ ['is-half', 'has-text-centered'] }>\n\t\t\t\t\t\t\t<Button isPrimary={ true } label='Get Started' onClick={ () => { props.onChange() } }/>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Columns>\n\t\t\t\t</Column>\n\t\t\t</Columns>\n\t\t</div>\n\t);\n};\n\nexport default Welcome;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { React, ReactDOM, App } from './scripts/imports';\n\nimport './assets/styles/main.scss';\n\nimport reportWebVitals from './reportWebVitals';\n\n// type ActionCounter = { type: 'increment' } | { type: 'decrement' };\n// type DispatchCounter = (action: ActionCounter) => void;\n// type StateCounter = { count: number };\n// type CountProviderProps = { children: React.ReactNode };\n//\n// type ActionUserStatus = { type: 'loggin' } | { type: 'logout' };\n// export type DispatchUserStatus = (action: ActionUserStatus) => void;\n// type StateUserStatus = { user: boolean };\n// type UserStatusProps = { children: React.ReactNode };\n//\n// const CountStateContext = React.createContext<StateCounter | undefined>(undefined);\n// const CountDispatchContext = React.createContext<DispatchCounter | undefined>(undefined);\n//\n// const UserStatusContext = React.createContext<StateUserStatus | undefined>(undefined);\n// const UserStatusDispatchContext = React.createContext<DispatchUserStatus | undefined>(undefined);\n//\n// function countReducer(state: StateCounter, action: ActionCounter) {\n// \tswitch(action.type) {\n// \t\tcase 'increment': {\n// \t\t\treturn { count: state.count + 1 };\n// \t\t}\n// \t\tcase 'decrement': {\n// \t\t\treturn { count: state.count - 1 };\n// \t\t}\n// \t\tdefault: {\n// \t\t\tthrow new Error(`Unhandled action type: ${ action }`);\n// \t\t}\n// \t}\n// };\n//\n// function userStatusReducer(state: StateUserStatus, action: ActionUserStatus) {\n// \tswitch(action.type) {\n// \t\tcase 'loggin': {\n// \t\t\treturn { user: state.user = true };\n// \t\t}\n// \t\tcase 'logout': {\n// \t\t\treturn { user: state.user = false };\n// \t\t}\n// \t\tdefault: {\n// \t\t\tthrow new Error(`Unhandled action type: ${ action }`);\n// \t\t}\n// \t}\n// };\n//\n// function CountProvider({ children }: CountProviderProps) {\n// \tconst [ state, dispatch ] = React.useReducer(countReducer, { count: 0});\n// \treturn (\n// \t\t<CountStateContext.Provider value={ state }>\n// \t\t\t<CountDispatchContext.Provider value={ dispatch }>\n// \t\t\t\t{ children }\n// \t\t\t</CountDispatchContext.Provider>\n// \t\t</CountStateContext.Provider>\n// \t);\n// };\n//\n// function UserStatusProvider({ children }: UserStatusProps) {\n// \tconst [ state, dispatch ] = React.useReducer(userStatusReducer, { user: false });\n// \treturn (\n// \t\t<UserStatusContext.Provider value={ state }>\n// \t\t\t<UserStatusDispatchContext.Provider value={ dispatch }>\n// \t\t\t\t{ children }\n// \t\t\t</UserStatusDispatchContext.Provider>\n// \t\t</UserStatusContext.Provider>\n// \t);\n// };\n//\n// function useCountState() {\n// \tconst context = React.useContext(CountStateContext);\n// \tif (context === undefined) {\n// \t\tthrow new Error('useCountState must be used within a CountProvider');\n// \t};\n// \treturn context;\n// };\n//\n// function useUserStatusState() {\n// \tconst context = React.useContext(UserStatusContext);\n// \tif (context === undefined) {\n// \t\tthrow new Error('useUserStatusState must be used within a UserStatusProvider');\n// \t}\n// \treturn context;\n// };\n//\n// function useCountDispatch() {\n// \tconst context = React.useContext(CountDispatchContext);\n// \tif (context === undefined) {\n// \t\tthrow new Error('useCountDispatch must be used within a CountProvider')\n// \t};\n// \treturn context;\n// };\n//\n// function useUserStatusDispatch() {\n// \tconst context = React.useContext(UserStatusDispatchContext);\n// \tif (context === undefined) {\n// \t\tthrow new Error('useUserStatusDispatch must be used within a UserStatusProvider');\n// \t}\n// \treturn context;\n// };\n//\n// function CountDisplay() {\n// \tconst { count } = useCountState();\n// \treturn <div>{`The current count is ${ count }`}</div>;\n// };\n//\n// function UserStatusDisplay() {\n// \tconst { user } = useUserStatusState();\n// \treturn <div>{`The current status is ${ user }`}</div>;\n// };\n//\n// function CounterIncrement() {\n// \tconst dispatch = useCountDispatch();\n// \treturn (\n// \t\t<button onClick={() => dispatch({type: 'increment'})}>\n// \t\t\tIncrement count\n// \t\t</button>\n// \t);\n// };\n//\n// function CounterDecrement() {\n// \tconst dispatch = useCountDispatch();\n// \treturn (\n// \t\t<button onClick={() => dispatch({type: 'decrement'})}>\n// \t\t\tDecrement count\n// \t\t</button>\n// \t);\n// };\n//\n// // async function CounterQuantity() {\n// //\n// // };\n//\n// function Login() {\n// \tconst dispatch = useUserStatusDispatch();\n// \treturn (\n// \t\t<button onClick={() => dispatch({type: 'loggin'})}>\n// \t\t\tLogin\n// \t\t</button>\n// \t);\n// };\n//\n// function Logout() {\n// \tconst dispatch = useUserStatusDispatch();\n// \treturn (\n// \t\t<button onClick={() => dispatch({type: 'logout'})}>\n// \t\t\tLogout\n// \t\t</button>\n// \t);\n// };\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}